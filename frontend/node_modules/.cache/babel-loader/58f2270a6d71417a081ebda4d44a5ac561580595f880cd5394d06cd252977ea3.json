{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst defaultSettings = {\n  cardBackStyle: 'elegant',\n  enableAnimations: true,\n  autoSave: true\n};\nconst SETTINGS_STORAGE_KEY = 'mahjong_settings';\nexport const useSettings = () => {\n  _s();\n  const [settings, setSettings] = useState(defaultSettings);\n\n  // 初始化时从localStorage加载设置\n  useEffect(() => {\n    try {\n      const savedSettings = localStorage.getItem(SETTINGS_STORAGE_KEY);\n      if (savedSettings) {\n        const parsed = JSON.parse(savedSettings);\n        setSettings({\n          ...defaultSettings,\n          ...parsed\n        });\n      }\n    } catch (error) {\n      console.warn('加载设置失败，使用默认设置:', error);\n    }\n  }, []);\n\n  // 保存设置到localStorage\n  const saveSettings = newSettings => {\n    try {\n      const updatedSettings = {\n        ...settings,\n        ...newSettings\n      };\n      setSettings(updatedSettings);\n      localStorage.setItem(SETTINGS_STORAGE_KEY, JSON.stringify(updatedSettings));\n    } catch (error) {\n      console.error('保存设置失败:', error);\n    }\n  };\n\n  // 单独的设置更新函数\n  const updateCardBackStyle = style => {\n    saveSettings({\n      cardBackStyle: style\n    });\n  };\n  const updateAnimations = enabled => {\n    saveSettings({\n      enableAnimations: enabled\n    });\n  };\n  const updateAutoSave = enabled => {\n    saveSettings({\n      autoSave: enabled\n    });\n  };\n\n  // 重置设置\n  const resetSettings = () => {\n    setSettings(defaultSettings);\n    localStorage.removeItem(SETTINGS_STORAGE_KEY);\n  };\n  return {\n    settings,\n    updateCardBackStyle,\n    updateAnimations,\n    updateAutoSave,\n    resetSettings,\n    saveSettings\n  };\n};\n_s(useSettings, \"ZGre7If7w4HenpmZpG3z+HIEEH4=\");","map":{"version":3,"names":["useState","useEffect","defaultSettings","cardBackStyle","enableAnimations","autoSave","SETTINGS_STORAGE_KEY","useSettings","_s","settings","setSettings","savedSettings","localStorage","getItem","parsed","JSON","parse","error","console","warn","saveSettings","newSettings","updatedSettings","setItem","stringify","updateCardBackStyle","style","updateAnimations","enabled","updateAutoSave","resetSettings","removeItem"],"sources":["D:/codes/PocketFlow-Tutorial-Codebase-Knowledge/paul/mj/frontend/src/hooks/useSettings.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { CardBackStyle } from '../components/MahjongTile';\r\n\r\ninterface Settings {\r\n  cardBackStyle: CardBackStyle;\r\n  enableAnimations: boolean;\r\n  autoSave: boolean;\r\n}\r\n\r\nconst defaultSettings: Settings = {\r\n  cardBackStyle: 'elegant',\r\n  enableAnimations: true,\r\n  autoSave: true,\r\n};\r\n\r\nconst SETTINGS_STORAGE_KEY = 'mahjong_settings';\r\n\r\nexport const useSettings = () => {\r\n  const [settings, setSettings] = useState<Settings>(defaultSettings);\r\n\r\n  // 初始化时从localStorage加载设置\r\n  useEffect(() => {\r\n    try {\r\n      const savedSettings = localStorage.getItem(SETTINGS_STORAGE_KEY);\r\n      if (savedSettings) {\r\n        const parsed = JSON.parse(savedSettings);\r\n        setSettings({ ...defaultSettings, ...parsed });\r\n      }\r\n    } catch (error) {\r\n      console.warn('加载设置失败，使用默认设置:', error);\r\n    }\r\n  }, []);\r\n\r\n  // 保存设置到localStorage\r\n  const saveSettings = (newSettings: Partial<Settings>) => {\r\n    try {\r\n      const updatedSettings = { ...settings, ...newSettings };\r\n      setSettings(updatedSettings);\r\n      localStorage.setItem(SETTINGS_STORAGE_KEY, JSON.stringify(updatedSettings));\r\n    } catch (error) {\r\n      console.error('保存设置失败:', error);\r\n    }\r\n  };\r\n\r\n  // 单独的设置更新函数\r\n  const updateCardBackStyle = (style: CardBackStyle) => {\r\n    saveSettings({ cardBackStyle: style });\r\n  };\r\n\r\n  const updateAnimations = (enabled: boolean) => {\r\n    saveSettings({ enableAnimations: enabled });\r\n  };\r\n\r\n  const updateAutoSave = (enabled: boolean) => {\r\n    saveSettings({ autoSave: enabled });\r\n  };\r\n\r\n  // 重置设置\r\n  const resetSettings = () => {\r\n    setSettings(defaultSettings);\r\n    localStorage.removeItem(SETTINGS_STORAGE_KEY);\r\n  };\r\n\r\n  return {\r\n    settings,\r\n    updateCardBackStyle,\r\n    updateAnimations,\r\n    updateAutoSave,\r\n    resetSettings,\r\n    saveSettings,\r\n  };\r\n}; "],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAS3C,MAAMC,eAAyB,GAAG;EAChCC,aAAa,EAAE,SAAS;EACxBC,gBAAgB,EAAE,IAAI;EACtBC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,oBAAoB,GAAG,kBAAkB;AAE/C,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAWE,eAAe,CAAC;;EAEnE;EACAD,SAAS,CAAC,MAAM;IACd,IAAI;MACF,MAAMU,aAAa,GAAGC,YAAY,CAACC,OAAO,CAACP,oBAAoB,CAAC;MAChE,IAAIK,aAAa,EAAE;QACjB,MAAMG,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACL,aAAa,CAAC;QACxCD,WAAW,CAAC;UAAE,GAAGR,eAAe;UAAE,GAAGY;QAAO,CAAC,CAAC;MAChD;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACC,IAAI,CAAC,gBAAgB,EAAEF,KAAK,CAAC;IACvC;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,YAAY,GAAIC,WAA8B,IAAK;IACvD,IAAI;MACF,MAAMC,eAAe,GAAG;QAAE,GAAGb,QAAQ;QAAE,GAAGY;MAAY,CAAC;MACvDX,WAAW,CAACY,eAAe,CAAC;MAC5BV,YAAY,CAACW,OAAO,CAACjB,oBAAoB,EAAES,IAAI,CAACS,SAAS,CAACF,eAAe,CAAC,CAAC;IAC7E,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;IACjC;EACF,CAAC;;EAED;EACA,MAAMQ,mBAAmB,GAAIC,KAAoB,IAAK;IACpDN,YAAY,CAAC;MAAEjB,aAAa,EAAEuB;IAAM,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,gBAAgB,GAAIC,OAAgB,IAAK;IAC7CR,YAAY,CAAC;MAAEhB,gBAAgB,EAAEwB;IAAQ,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMC,cAAc,GAAID,OAAgB,IAAK;IAC3CR,YAAY,CAAC;MAAEf,QAAQ,EAAEuB;IAAQ,CAAC,CAAC;EACrC,CAAC;;EAED;EACA,MAAME,aAAa,GAAGA,CAAA,KAAM;IAC1BpB,WAAW,CAACR,eAAe,CAAC;IAC5BU,YAAY,CAACmB,UAAU,CAACzB,oBAAoB,CAAC;EAC/C,CAAC;EAED,OAAO;IACLG,QAAQ;IACRgB,mBAAmB;IACnBE,gBAAgB;IAChBE,cAAc;IACdC,aAAa;IACbV;EACF,CAAC;AACH,CAAC;AAACZ,EAAA,CAtDWD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}