{"ast":null,"code":"import _objectSpread from\"D:/codes/PocketFlow-Tutorial-Codebase-Knowledge/paul/mj/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState,useEffect}from'react';const defaultSettings={cardBackStyle:'pure',enableAnimations:true,autoSave:true};const SETTINGS_STORAGE_KEY='mahjong_settings';export const useSettings=()=>{const[settings,setSettings]=useState(defaultSettings);// 初始化时从localStorage加载设置\nuseEffect(()=>{try{const savedSettings=localStorage.getItem(SETTINGS_STORAGE_KEY);if(savedSettings){const parsed=JSON.parse(savedSettings);setSettings(_objectSpread(_objectSpread({},defaultSettings),parsed));}}catch(error){console.warn('加载设置失败，使用默认设置:',error);}},[]);// 保存设置到localStorage\nconst saveSettings=newSettings=>{try{const updatedSettings=_objectSpread(_objectSpread({},settings),newSettings);setSettings(updatedSettings);localStorage.setItem(SETTINGS_STORAGE_KEY,JSON.stringify(updatedSettings));}catch(error){console.error('保存设置失败:',error);}};// 单独的设置更新函数\nconst updateCardBackStyle=style=>{saveSettings({cardBackStyle:style});};const updateAnimations=enabled=>{saveSettings({enableAnimations:enabled});};const updateAutoSave=enabled=>{saveSettings({autoSave:enabled});};// 重置设置\nconst resetSettings=()=>{setSettings(defaultSettings);localStorage.removeItem(SETTINGS_STORAGE_KEY);};return{settings,updateCardBackStyle,updateAnimations,updateAutoSave,resetSettings,saveSettings};};","map":{"version":3,"names":["useState","useEffect","defaultSettings","cardBackStyle","enableAnimations","autoSave","SETTINGS_STORAGE_KEY","useSettings","settings","setSettings","savedSettings","localStorage","getItem","parsed","JSON","parse","_objectSpread","error","console","warn","saveSettings","newSettings","updatedSettings","setItem","stringify","updateCardBackStyle","style","updateAnimations","enabled","updateAutoSave","resetSettings","removeItem"],"sources":["D:/codes/PocketFlow-Tutorial-Codebase-Knowledge/paul/mj/frontend/src/hooks/useSettings.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { CardBackStyle } from '../components/MahjongTile';\n\ninterface Settings {\n  cardBackStyle: CardBackStyle;\n  enableAnimations: boolean;\n  autoSave: boolean;\n}\n\nconst defaultSettings: Settings = {\n  cardBackStyle: 'pure',\n  enableAnimations: true,\n  autoSave: true,\n};\n\nconst SETTINGS_STORAGE_KEY = 'mahjong_settings';\n\nexport const useSettings = () => {\n  const [settings, setSettings] = useState<Settings>(defaultSettings);\n\n  // 初始化时从localStorage加载设置\n  useEffect(() => {\n    try {\n      const savedSettings = localStorage.getItem(SETTINGS_STORAGE_KEY);\n      if (savedSettings) {\n        const parsed = JSON.parse(savedSettings);\n        setSettings({ ...defaultSettings, ...parsed });\n      }\n    } catch (error) {\n      console.warn('加载设置失败，使用默认设置:', error);\n    }\n  }, []);\n\n  // 保存设置到localStorage\n  const saveSettings = (newSettings: Partial<Settings>) => {\n    try {\n      const updatedSettings = { ...settings, ...newSettings };\n      setSettings(updatedSettings);\n      localStorage.setItem(SETTINGS_STORAGE_KEY, JSON.stringify(updatedSettings));\n    } catch (error) {\n      console.error('保存设置失败:', error);\n    }\n  };\n\n  // 单独的设置更新函数\n  const updateCardBackStyle = (style: CardBackStyle) => {\n    saveSettings({ cardBackStyle: style });\n  };\n\n  const updateAnimations = (enabled: boolean) => {\n    saveSettings({ enableAnimations: enabled });\n  };\n\n  const updateAutoSave = (enabled: boolean) => {\n    saveSettings({ autoSave: enabled });\n  };\n\n  // 重置设置\n  const resetSettings = () => {\n    setSettings(defaultSettings);\n    localStorage.removeItem(SETTINGS_STORAGE_KEY);\n  };\n\n  return {\n    settings,\n    updateCardBackStyle,\n    updateAnimations,\n    updateAutoSave,\n    resetSettings,\n    saveSettings,\n  };\n}; "],"mappings":"qJAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAS3C,KAAM,CAAAC,eAAyB,CAAG,CAChCC,aAAa,CAAE,MAAM,CACrBC,gBAAgB,CAAE,IAAI,CACtBC,QAAQ,CAAE,IACZ,CAAC,CAED,KAAM,CAAAC,oBAAoB,CAAG,kBAAkB,CAE/C,MAAO,MAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAWE,eAAe,CAAC,CAEnE;AACAD,SAAS,CAAC,IAAM,CACd,GAAI,CACF,KAAM,CAAAS,aAAa,CAAGC,YAAY,CAACC,OAAO,CAACN,oBAAoB,CAAC,CAChE,GAAII,aAAa,CAAE,CACjB,KAAM,CAAAG,MAAM,CAAGC,IAAI,CAACC,KAAK,CAACL,aAAa,CAAC,CACxCD,WAAW,CAAAO,aAAA,CAAAA,aAAA,IAAMd,eAAe,EAAKW,MAAM,CAAE,CAAC,CAChD,CACF,CAAE,MAAOI,KAAK,CAAE,CACdC,OAAO,CAACC,IAAI,CAAC,gBAAgB,CAAEF,KAAK,CAAC,CACvC,CACF,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAG,YAAY,CAAIC,WAA8B,EAAK,CACvD,GAAI,CACF,KAAM,CAAAC,eAAe,CAAAN,aAAA,CAAAA,aAAA,IAAQR,QAAQ,EAAKa,WAAW,CAAE,CACvDZ,WAAW,CAACa,eAAe,CAAC,CAC5BX,YAAY,CAACY,OAAO,CAACjB,oBAAoB,CAAEQ,IAAI,CAACU,SAAS,CAACF,eAAe,CAAC,CAAC,CAC7E,CAAE,MAAOL,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,SAAS,CAAEA,KAAK,CAAC,CACjC,CACF,CAAC,CAED;AACA,KAAM,CAAAQ,mBAAmB,CAAIC,KAAoB,EAAK,CACpDN,YAAY,CAAC,CAAEjB,aAAa,CAAEuB,KAAM,CAAC,CAAC,CACxC,CAAC,CAED,KAAM,CAAAC,gBAAgB,CAAIC,OAAgB,EAAK,CAC7CR,YAAY,CAAC,CAAEhB,gBAAgB,CAAEwB,OAAQ,CAAC,CAAC,CAC7C,CAAC,CAED,KAAM,CAAAC,cAAc,CAAID,OAAgB,EAAK,CAC3CR,YAAY,CAAC,CAAEf,QAAQ,CAAEuB,OAAQ,CAAC,CAAC,CACrC,CAAC,CAED;AACA,KAAM,CAAAE,aAAa,CAAGA,CAAA,GAAM,CAC1BrB,WAAW,CAACP,eAAe,CAAC,CAC5BS,YAAY,CAACoB,UAAU,CAACzB,oBAAoB,CAAC,CAC/C,CAAC,CAED,MAAO,CACLE,QAAQ,CACRiB,mBAAmB,CACnBE,gBAAgB,CAChBE,cAAc,CACdC,aAAa,CACbV,YACF,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}