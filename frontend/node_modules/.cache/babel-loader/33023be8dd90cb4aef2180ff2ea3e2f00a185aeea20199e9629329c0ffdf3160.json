{"ast":null,"code":"import React,{useState}from'react';import{useGameStore,selectMyHand,selectDiscardedTiles}from'../stores/gameStore';import{TileType,createTile,tilesEqual,MeldType,GangType}from'../types/mahjong';import MahjongTile from'./MahjongTile';import MahjongTable from'./MahjongTable';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GameBoard=_ref=>{let{className,cardBackStyle='elegant'}=_ref;const myHand=useGameStore(selectMyHand());const discardedTiles=useGameStore(selectDiscardedTiles());const{addTileToHand,removeTileFromHand,addDiscardedTile,addMeld}=useGameStore();const[selectedTiles,setSelectedTiles]=useState([]);const[selectedPlayer,setSelectedPlayer]=useState(0);// 默认选择上家（显示索引0）\nconst[operationType,setOperationType]=useState('hand');// 所有可选的牌\nconst availableTiles=[];// 万 1-9\nfor(let i=1;i<=9;i++){availableTiles.push(createTile(TileType.WAN,i));}// 条 1-9\nfor(let i=1;i<=9;i++){availableTiles.push(createTile(TileType.TIAO,i));}// 筒 1-9\nfor(let i=1;i<=9;i++){availableTiles.push(createTile(TileType.TONG,i));}const handleTileClick=tile=>{const actualPlayerId=displayOrder[selectedPlayer];// 转换显示索引为实际Player ID\nif(operationType==='hand'){// 为当前选中的玩家添加手牌\naddTileToHand(actualPlayerId,tile);}else if(operationType==='discard'){addDiscardedTile(tile,actualPlayerId);}else if(operationType==='peng'){// 碰牌：创建碰牌组并添加到melds\nconst meld={type:MeldType.PENG,tiles:[tile,tile,tile],exposed:true};addMeld(actualPlayerId,meld);}else if(operationType==='angang'){// 暗杠：创建暗杠组并添加到melds\nconst meld={type:MeldType.GANG,tiles:[tile,tile,tile,tile],exposed:false,gang_type:GangType.AN_GANG};addMeld(actualPlayerId,meld);}else if(operationType==='zhigang'){// 直杠：创建明杠组并添加到melds\nconst meld={type:MeldType.GANG,tiles:[tile,tile,tile,tile],exposed:true,gang_type:GangType.MING_GANG};addMeld(actualPlayerId,meld);}else if(operationType==='jiagang'){// 加杠：创建明杠组并添加到melds\nconst meld={type:MeldType.GANG,tiles:[tile,tile,tile,tile],exposed:true,gang_type:GangType.JIA_GANG// 使用JIA_GANG类型\n};addMeld(actualPlayerId,meld);}};const handleHandTileClick=tile=>{const isSelected=selectedTiles.some(t=>tilesEqual(t,tile));if(isSelected){setSelectedTiles(prev=>prev.filter(t=>!tilesEqual(t,tile)));}else{setSelectedTiles(prev=>[...prev,tile]);}};const handleDiscardSelected=()=>{selectedTiles.forEach(tile=>{removeTileFromHand(0,tile);addDiscardedTile(tile,0);});setSelectedTiles([]);};const handleClearHand=()=>{useGameStore.getState().resetGame();setSelectedTiles([]);};const playerNames=['我','下家','对家','上家'];// Player ID映射：0=我，1=下家，2=对家，3=上家\nconst playerColors=['text-blue-600','text-green-600','text-red-600','text-yellow-600'];// 用于界面显示的玩家顺序：上家、我、下家、对家\nconst displayOrder=[3,0,1,2];// 对应Player ID：上家=3，我=0，下家=1，对家=2\nconst displayNames=displayOrder.map(id=>playerNames[id]);const displayColors=displayOrder.map(id=>playerColors[id]);// 获取操作类型的中文名称\nconst getOperationName=type=>{const operationMap={'hand':'添加手牌','discard':'弃牌','peng':'碰牌','angang':'暗杠','zhigang':'直杠','jiagang':'加杠'};return operationMap[type]||type;};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-green-100 rounded-lg p-3 h-full flex flex-col \".concat(className),children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-white rounded-lg p-3 border border-gray-300 mb-3\",children:/*#__PURE__*/_jsx(MahjongTable,{cardBackStyle:cardBackStyle})}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3 flex-shrink-0\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col gap-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-6 flex-wrap\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-3\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-gray-700 min-w-max\",children:\"\\u2460 \\u9009\\u62E9\\u73A9\\u5BB6:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex gap-1\",children:displayNames.map((name,index)=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedPlayer(index),className:\"px-3 py-2 rounded-md text-sm font-medium transition-colors \".concat(selectedPlayer===index?\"bg-opacity-20 \".concat(displayColors[index].replace('text-','bg-').replace('-600','-200'),\" \").concat(displayColors[index],\" border-2 border-current\"):'bg-gray-100 text-gray-600 hover:bg-gray-200 border-2 border-transparent'),children:name},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-3\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-gray-700 min-w-max\",children:\"\\u2461 \\u9009\\u62E9\\u64CD\\u4F5C:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex bg-gray-200 rounded-lg p-1\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setOperationType('hand'),className:\"px-3 py-1.5 rounded-md text-xs font-medium transition-colors \".concat(operationType==='hand'?'bg-white text-blue-600 shadow-sm':'text-gray-600 hover:text-gray-800'),children:\"\\u6DFB\\u52A0\\u624B\\u724C\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setOperationType('discard'),className:\"px-3 py-1.5 rounded-md text-xs font-medium transition-colors \".concat(operationType==='discard'?'bg-white text-blue-600 shadow-sm':'text-gray-600 hover:text-gray-800'),children:\"\\u5F03\\u724C\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setOperationType('peng'),className:\"px-3 py-1.5 rounded-md text-xs font-medium transition-colors \".concat(operationType==='peng'?'bg-white text-blue-600 shadow-sm':'text-gray-600 hover:text-gray-800'),children:\"\\u78B0\\u724C\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setOperationType('angang'),className:\"px-3 py-1.5 rounded-md text-xs font-medium transition-colors \".concat(operationType==='angang'?'bg-white text-blue-600 shadow-sm':'text-gray-600 hover:text-gray-800'),children:\"\\u6697\\u6760\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setOperationType('zhigang'),className:\"px-3 py-1.5 rounded-md text-xs font-medium transition-colors \".concat(operationType==='zhigang'?'bg-white text-blue-600 shadow-sm':'text-gray-600 hover:text-gray-800'),children:\"\\u76F4\\u6760\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setOperationType('jiagang'),className:\"px-3 py-1.5 rounded-md text-xs font-medium transition-colors \".concat(operationType==='jiagang'?'bg-white text-blue-600 shadow-sm':'text-gray-600 hover:text-gray-800'),children:\"\\u52A0\\u6760\"})]})]})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg p-3 border border-gray-300 flex-1 overflow-y-auto\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-4 mb-3\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-base font-semibold text-gray-700\",children:\"\\u2462 \\u9009\\u62E9\\u9EBB\\u5C06\\u724C\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 px-3 py-1.5 bg-blue-50 border border-blue-200 rounded-md\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 bg-blue-500 rounded-full\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-blue-700\",children:[\"\\u5F53\\u524D\\u64CD\\u4F5C: \\u4E3A \",/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:displayNames[selectedPlayer]}),\" \",getOperationName(operationType)]})]})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"flex gap-0.5 flex-wrap\",children:availableTiles.map((tile,index)=>{return/*#__PURE__*/_jsx(MahjongTile,{tile:tile,size:\"small\",variant:\"default\",onClick:()=>handleTileClick(tile),animationDelay:index*0.02,cardBackStyle:cardBackStyle},\"tile-\".concat(tile.type,\"-\").concat(tile.value));})})})]})]});};export default GameBoard;","map":{"version":3,"names":["React","useState","useGameStore","selectMyHand","selectDiscardedTiles","TileType","createTile","tilesEqual","MeldType","GangType","MahjongTile","MahjongTable","jsx","_jsx","jsxs","_jsxs","GameBoard","_ref","className","cardBackStyle","myHand","discardedTiles","addTileToHand","removeTileFromHand","addDiscardedTile","addMeld","selectedTiles","setSelectedTiles","selectedPlayer","setSelectedPlayer","operationType","setOperationType","availableTiles","i","push","WAN","TIAO","TONG","handleTileClick","tile","actualPlayerId","displayOrder","meld","type","PENG","tiles","exposed","GANG","gang_type","AN_GANG","MING_GANG","JIA_GANG","handleHandTileClick","isSelected","some","t","prev","filter","handleDiscardSelected","forEach","handleClearHand","getState","resetGame","playerNames","playerColors","displayNames","map","id","displayColors","getOperationName","operationMap","concat","children","name","index","onClick","replace","size","variant","animationDelay","value"],"sources":["D:/codes/PocketFlow-Tutorial-Codebase-Knowledge/paul/mj/frontend/src/components/GameBoard.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { AnimatePresence } from 'framer-motion';\nimport { useGameStore, selectMyHand, selectDiscardedTiles } from '../stores/gameStore';\nimport { Tile, TileType, createTile, tileToString, tilesEqual, Meld, MeldType, GangType } from '../types/mahjong';\nimport MahjongTile from './MahjongTile';\nimport MahjongTable from './MahjongTable';\nimport { CardBackStyle } from './MahjongTile';\n\ninterface GameBoardProps {\n  className?: string;\n  cardBackStyle?: CardBackStyle;\n}\n\nconst GameBoard: React.FC<GameBoardProps> = ({ className, cardBackStyle = 'elegant' }) => {\n  const myHand = useGameStore(selectMyHand());\n  const discardedTiles = useGameStore(selectDiscardedTiles());\n  const { addTileToHand, removeTileFromHand, addDiscardedTile, addMeld } = useGameStore();\n  \n  const [selectedTiles, setSelectedTiles] = useState<Tile[]>([]);\n  const [selectedPlayer, setSelectedPlayer] = useState<number>(0); // 默认选择上家（显示索引0）\n  const [operationType, setOperationType] = useState<'hand' | 'discard' | 'peng' | 'angang' | 'zhigang' | 'jiagang'>('hand');\n  \n  // 所有可选的牌\n  const availableTiles: Tile[] = [];\n  \n  // 万 1-9\n  for (let i = 1; i <= 9; i++) {\n    availableTiles.push(createTile(TileType.WAN, i));\n  }\n  \n  // 条 1-9\n  for (let i = 1; i <= 9; i++) {\n    availableTiles.push(createTile(TileType.TIAO, i));\n  }\n  \n  // 筒 1-9\n  for (let i = 1; i <= 9; i++) {\n    availableTiles.push(createTile(TileType.TONG, i));\n  }\n\n  const handleTileClick = (tile: Tile) => {\n    const actualPlayerId = displayOrder[selectedPlayer]; // 转换显示索引为实际Player ID\n    \n    if (operationType === 'hand') {\n      // 为当前选中的玩家添加手牌\n      addTileToHand(actualPlayerId, tile);\n    } else if (operationType === 'discard') {\n      addDiscardedTile(tile, actualPlayerId);\n    } else if (operationType === 'peng') {\n      // 碰牌：创建碰牌组并添加到melds\n      const meld: Meld = {\n        type: MeldType.PENG,\n        tiles: [tile, tile, tile],\n        exposed: true\n      };\n      addMeld(actualPlayerId, meld);\n    } else if (operationType === 'angang') {\n      // 暗杠：创建暗杠组并添加到melds\n      const meld: Meld = {\n        type: MeldType.GANG,\n        tiles: [tile, tile, tile, tile],\n        exposed: false,\n        gang_type: GangType.AN_GANG\n      };\n      addMeld(actualPlayerId, meld);\n    } else if (operationType === 'zhigang') {\n      // 直杠：创建明杠组并添加到melds\n      const meld: Meld = {\n        type: MeldType.GANG,\n        tiles: [tile, tile, tile, tile],\n        exposed: true,\n        gang_type: GangType.MING_GANG\n      };\n      addMeld(actualPlayerId, meld);\n    } else if (operationType === 'jiagang') {\n      // 加杠：创建明杠组并添加到melds\n      const meld: Meld = {\n        type: MeldType.GANG,\n        tiles: [tile, tile, tile, tile],\n        exposed: true,\n        gang_type: GangType.JIA_GANG  // 使用JIA_GANG类型\n      };\n      addMeld(actualPlayerId, meld);\n    }\n  };\n  \n  const handleHandTileClick = (tile: Tile) => {\n    const isSelected = selectedTiles.some(t => tilesEqual(t, tile));\n    \n    if (isSelected) {\n      setSelectedTiles(prev => prev.filter(t => !tilesEqual(t, tile)));\n    } else {\n      setSelectedTiles(prev => [...prev, tile]);\n    }\n  };\n  \n  const handleDiscardSelected = () => {\n    selectedTiles.forEach(tile => {\n      removeTileFromHand(0, tile);\n      addDiscardedTile(tile, 0);\n    });\n    setSelectedTiles([]);\n  };\n  \n  const handleClearHand = () => {\n    useGameStore.getState().resetGame();\n    setSelectedTiles([]);\n  };\n\n  const playerNames = ['我', '下家', '对家', '上家']; // Player ID映射：0=我，1=下家，2=对家，3=上家\n  const playerColors = ['text-blue-600', 'text-green-600', 'text-red-600', 'text-yellow-600'];\n  \n  // 用于界面显示的玩家顺序：上家、我、下家、对家\n  const displayOrder = [3, 0, 1, 2]; // 对应Player ID：上家=3，我=0，下家=1，对家=2\n  const displayNames = displayOrder.map(id => playerNames[id]);\n  const displayColors = displayOrder.map(id => playerColors[id]);\n\n  // 获取操作类型的中文名称\n  const getOperationName = (type: 'hand' | 'discard' | 'peng' | 'angang' | 'zhigang' | 'jiagang'): string => {\n    const operationMap = {\n      'hand': '添加手牌',\n      'discard': '弃牌',\n      'peng': '碰牌',\n      'angang': '暗杠',\n      'zhigang': '直杠',\n      'jiagang': '加杠'\n    };\n    return operationMap[type] || type;\n  };\n\n  return (\n    <div className={`bg-green-100 rounded-lg p-3 h-full flex flex-col ${className}`}>\n      {/* 麻将桌布局 - 与选择麻将牌区域相同的宽度 */}\n      <div className=\"bg-white rounded-lg p-3 border border-gray-300 mb-3\">\n        <MahjongTable cardBackStyle={cardBackStyle} />\n      </div>\n      \n      {/* 操作控制区域 */}\n      <div className=\"mb-3 flex-shrink-0\">\n        <div className=\"flex flex-col gap-3\">\n          \n          {/* 第一行：选择玩家和选择操作 */}\n          <div className=\"flex items-center gap-6 flex-wrap\">\n            {/* 第一步：选择玩家 */}\n            <div className=\"flex items-center gap-3\">\n              <span className=\"text-sm font-medium text-gray-700 min-w-max\">\n                ① 选择玩家:\n              </span>\n              <div className=\"flex gap-1\">\n                {displayNames.map((name, index) => (\n                  <button\n                    key={index}\n                    onClick={() => setSelectedPlayer(index)}\n                    className={`px-3 py-2 rounded-md text-sm font-medium transition-colors ${\n                      selectedPlayer === index\n                        ? `bg-opacity-20 ${displayColors[index].replace('text-', 'bg-').replace('-600', '-200')} ${displayColors[index]} border-2 border-current`\n                        : 'bg-gray-100 text-gray-600 hover:bg-gray-200 border-2 border-transparent'\n                    }`}\n                  >\n                    {name}\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {/* 第二步：选择操作类型 */}\n            <div className=\"flex items-center gap-3\">\n              <span className=\"text-sm font-medium text-gray-700 min-w-max\">\n                ② 选择操作:\n              </span>\n              <div className=\"flex bg-gray-200 rounded-lg p-1\">\n                <button\n                  onClick={() => setOperationType('hand')}\n                  className={`px-3 py-1.5 rounded-md text-xs font-medium transition-colors ${\n                    operationType === 'hand'\n                      ? 'bg-white text-blue-600 shadow-sm'\n                      : 'text-gray-600 hover:text-gray-800'\n                  }`}\n                >\n                  添加手牌\n                </button>\n                <button\n                  onClick={() => setOperationType('discard')}\n                  className={`px-3 py-1.5 rounded-md text-xs font-medium transition-colors ${\n                    operationType === 'discard'\n                      ? 'bg-white text-blue-600 shadow-sm'\n                      : 'text-gray-600 hover:text-gray-800'\n                  }`}\n                >\n                  弃牌\n                </button>\n                <button\n                  onClick={() => setOperationType('peng')}\n                  className={`px-3 py-1.5 rounded-md text-xs font-medium transition-colors ${\n                    operationType === 'peng'\n                      ? 'bg-white text-blue-600 shadow-sm'\n                      : 'text-gray-600 hover:text-gray-800'\n                  }`}\n                >\n                  碰牌\n                </button>\n                <button\n                  onClick={() => setOperationType('angang')}\n                  className={`px-3 py-1.5 rounded-md text-xs font-medium transition-colors ${\n                    operationType === 'angang'\n                      ? 'bg-white text-blue-600 shadow-sm'\n                      : 'text-gray-600 hover:text-gray-800'\n                  }`}\n                >\n                  暗杠\n                </button>\n                <button\n                  onClick={() => setOperationType('zhigang')}\n                  className={`px-3 py-1.5 rounded-md text-xs font-medium transition-colors ${\n                    operationType === 'zhigang'\n                      ? 'bg-white text-blue-600 shadow-sm'\n                      : 'text-gray-600 hover:text-gray-800'\n                  }`}\n                >\n                  直杠\n                </button>\n                <button\n                  onClick={() => setOperationType('jiagang')}\n                  className={`px-3 py-1.5 rounded-md text-xs font-medium transition-colors ${\n                    operationType === 'jiagang'\n                      ? 'bg-white text-blue-600 shadow-sm'\n                      : 'text-gray-600 hover:text-gray-800'\n                  }`}\n                >\n                  加杠\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* 麻将牌选择区 - 可滚动，占用剩余空间 */}\n      <div className=\"bg-white rounded-lg p-3 border border-gray-300 flex-1 overflow-y-auto\">\n        <div className=\"flex items-center gap-4 mb-3\">\n          <h3 className=\"text-base font-semibold text-gray-700\">\n            ③ 选择麻将牌\n          </h3>\n          \n          {/* 当前操作状态提示 */}\n          <div className=\"flex items-center gap-2 px-3 py-1.5 bg-blue-50 border border-blue-200 rounded-md\">\n            <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\n            <span className=\"text-sm text-blue-700\">\n              当前操作: 为 <span className=\"font-medium\">{displayNames[selectedPlayer]}</span> {getOperationName(operationType)}\n            </span>\n          </div>\n        </div>\n        \n        {/* 所有麻将牌一列显示 */}\n        <div>\n          <div className=\"flex gap-0.5 flex-wrap\">\n            {availableTiles.map((tile, index) => {\n              return (\n                <MahjongTile\n                  key={`tile-${tile.type}-${tile.value}`}\n                  tile={tile}\n                  size=\"small\"\n                  variant=\"default\"\n                  onClick={() => handleTileClick(tile)}\n                  animationDelay={index * 0.02}\n                  cardBackStyle={cardBackStyle}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GameBoard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}